{"ast":null,"code":"import _slicedToArray from \"/home/user/Desktop/Memory_Game/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/user/Desktop/Memory_Game/frontend/src/Components/HighScore.jsx\";\n\nimport React, { useState, useEffect } from \"react\";\nimport Cards from \"./Cards\";\n\nvar HighScore = function HighScore(props) {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      highScore = _useState2[0],\n      setHighScore = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      game = _useState4[0],\n      setGame = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      options = _useState6[0],\n      setOptions = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      flippedCount = _useState8[0],\n      setFlippedCount = _useState8[1];\n\n  useEffect(function () {\n    var finished = !game.some(function (card) {\n      return !card.flipped;\n    });\n\n    if (finished && game.length > 0) {\n      setTimeout(function () {\n        var bestPossible = game.length;\n        var multiplier;\n\n        if (options === 12) {\n          multiplier = 5;\n        } else if (options === 18) {\n          multiplier = 2.5;\n        } else if (options === 24) {\n          multiplier = 1;\n        }\n\n        var pointsLost = multiplier * (0.66 * flippedCount - bestPossible);\n        var score;\n\n        if (pointsLost < 100) {\n          score = 100 - pointsLost;\n        } else {\n          score = 0;\n        }\n\n        if (score > highScore) {\n          setHighScore(score);\n          var json = JSON.stringify(score);\n          localStorage.setItem(\"memorygamehighscore\", json);\n        }\n\n        var newGame = alert(\"You Win!, SCORE: \" + score + \" New Game?\"); //confirm\n\n        if (newGame) {\n          var gameLength = game.length;\n          setOptions(null);\n          setTimeout(function () {\n            setOptions(gameLength);\n          }, 5);\n        } else {\n          setOptions(null);\n        }\n      }, 500);\n    }\n  }, [flippedCount, game, highScore, options]);\n  useEffect(function () {\n    var json = localStorage.getItem(\"memorygamehighscore\");\n    var savedScore = JSON.parse(json);\n\n    if (savedScore) {\n      setHighScore(savedScore);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container_HighScore\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container_Count\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"High Score: \", highScore, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, options === null ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setOptions(12);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"Easy\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setOptions(18);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, \"Medium\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setOptions(24);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"Hard\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      var prevOptions = options;\n      setOptions(null);\n      setTimeout(function () {\n        setOptions(prevOptions);\n      }, 5);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"Start Over\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setOptions(null);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, \"Main Menu\")))), options ? /*#__PURE__*/React.createElement(Cards, {\n    path: \"/cards\",\n    options: options,\n    setOptions: setOptions,\n    highScore: props.highScore,\n    setHighScore: setHighScore,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"Level\"));\n};\n\nexport default HighScore;","map":{"version":3,"names":["React","useState","useEffect","Cards","HighScore","props","highScore","setHighScore","game","setGame","options","setOptions","flippedCount","setFlippedCount","finished","some","card","flipped","length","setTimeout","bestPossible","multiplier","pointsLost","score","json","JSON","stringify","localStorage","setItem","newGame","alert","gameLength","getItem","savedScore","parse","prevOptions"],"sources":["/home/user/Desktop/Memory_Game/frontend/src/Components/HighScore.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Cards from \"./Cards\";\n\nconst HighScore = (props) => {\n  const [highScore, setHighScore] = useState(0);\n  const [game, setGame] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [flippedCount, setFlippedCount] = useState([]);\n\n  useEffect(() => {\n    const finished = !game.some((card) => !card.flipped);\n    if (finished && game.length > 0) {\n      setTimeout(() => {\n        const bestPossible = game.length;\n        let multiplier;\n\n        if (options === 12) {\n          multiplier = 5;\n        } else if (options === 18) {\n          multiplier = 2.5;\n        } else if (options === 24) {\n          multiplier = 1;\n        }\n\n        const pointsLost = multiplier * (0.66 * flippedCount - bestPossible);\n\n        let score;\n        if (pointsLost < 100) {\n          score = 100 - pointsLost;\n        } else {\n          score = 0;\n        }\n\n        if (score > highScore) {\n          setHighScore(score);\n          const json = JSON.stringify(score);\n          localStorage.setItem(\"memorygamehighscore\", json);\n        }\n\n        const newGame = alert(\"You Win!, SCORE: \" + score + \" New Game?\"); //confirm\n        if (newGame) {\n          const gameLength = game.length;\n          setOptions(null);\n          setTimeout(() => {\n            setOptions(gameLength);\n          }, 5);\n        } else {\n          setOptions(null);\n        }\n      }, 500);\n    }\n  }, [flippedCount, game, highScore, options]);\n\n  useEffect(() => {\n    const json = localStorage.getItem(\"memorygamehighscore\");\n    const savedScore = JSON.parse(json);\n    if (savedScore) {\n      setHighScore(savedScore);\n    }\n  }, []);\n  return (\n    <>\n      <div className=\"container_HighScore\">\n        <div className=\"container_Count\">High Score: {highScore} </div>\n        <div>\n          {options === null ? (\n            <>\n              <button onClick={() => setOptions(12)}>Easy</button>\n              <button onClick={() => setOptions(18)}>Medium</button>\n              <button onClick={() => setOptions(24)}>Hard</button>\n            </>\n          ) : (\n            <>\n              <button\n                onClick={() => {\n                  const prevOptions = options;\n                  setOptions(null);\n                  setTimeout(() => {\n                    setOptions(prevOptions);\n                  }, 5);\n                }}\n              >\n                Start Over\n              </button>\n              <button onClick={() => setOptions(null)}>Main Menu</button>\n            </>\n          )}\n        </div>\n      </div>\n\n      {options ? (\n        <Cards\n          path=\"/cards\"\n          options={options}\n          setOptions={setOptions}\n          highScore={props.highScore}\n          setHighScore={setHighScore}\n        />\n      ) : (\n        <h2>Level</h2>\n      )}\n    </>\n  );\n};\n\nexport default HighScore;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}