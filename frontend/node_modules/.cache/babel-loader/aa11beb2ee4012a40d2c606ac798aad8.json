{"ast":null,"code":"import _objectSpread from \"/home/user/Desktop/Memory_Game/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/user/Desktop/Memory_Game/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/user/Desktop/Memory_Game/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/user/Desktop/Memory_Game/frontend/src/Components/Cards.jsx\";\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport SingleCard from \"./SingleCard\";\nimport { data } from \"./cardsData\";\nimport HighScore from \"./HighScore\";\n\nvar Cards = function Cards(props) {\n  var _useContext = useContext(LoginContext),\n      userData = _useContext.userData;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      cards = _useState2[0],\n      setCards = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      choiceOne = _useState4[0],\n      setChoiceOne = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      choiceTwo = _useState6[0],\n      setChoiceTwo = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      count = _useState8[0],\n      setCount = _useState8[1]; // * SHUFFLE CARDS\n\n\n  var shuffleCards = function shuffleCards() {\n    var shuffledCards = [].concat(_toConsumableArray(data), _toConsumableArray(data)).sort(function () {\n      return Math.random() - 0.5;\n    }).map(function (card) {\n      return _objectSpread({}, card, {\n        id: Math.random()\n      });\n    });\n    setCards(shuffledCards);\n  }; // * CHOOSE CARDS\n\n\n  var choseCards = function choseCards(card) {\n    console.log(card);\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  }; // * MATCH CARDS\n\n\n  useEffect(function () {\n    if (choiceOne && choiceTwo) {\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(function (previousCards) {\n          return previousCards.map(function (card) {\n            if (card.src === choiceOne.src) {\n              return _objectSpread({}, card, {\n                matched: true\n              });\n            } else {\n              return card;\n            }\n          });\n        });\n        reset();\n      } else {\n        setTimeout(function () {\n          return reset();\n        }, 1500);\n      }\n    }\n  }, [choiceOne, choiceTwo]); //* RESET CHOICES\n\n  var reset = function reset() {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n  };\n\n  console.log(cards); //*GIORGIO\n\n  var updateCount = function updateCount() {\n    console.log(\"updateCount\");\n    setCount(count + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container_load\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container_Player\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heading_container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, \"Player: \", userData.playerName, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container_topButtons\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, \"Turn: \", count), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button_container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: shuffleCards,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Load Cards\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, cards.map(function (card) {\n    return /*#__PURE__*/React.createElement(SingleCard, {\n      key: card.id,\n      src: card.src,\n      card: card,\n      choseCards: choseCards,\n      updateCount: updateCount,\n      flipped: card === choiceOne || card === choiceTwo || card.matched,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    });\n  }))))));\n};\n\nexport default Cards;","map":{"version":3,"names":["React","useState","useEffect","useContext","SingleCard","data","HighScore","Cards","props","LoginContext","userData","cards","setCards","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","count","setCount","shuffleCards","shuffledCards","sort","Math","random","map","card","id","choseCards","console","log","src","previousCards","matched","reset","setTimeout","updateCount","playerName"],"sources":["/home/user/Desktop/Memory_Game/frontend/src/Components/Cards.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\n\nimport SingleCard from \"./SingleCard\";\nimport { data } from \"./cardsData\";\nimport HighScore from \"./HighScore\";\n\nconst Cards = (props) => {\n  const { userData } = useContext(LoginContext);\n  const [cards, setCards] = useState([]);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [count, setCount] = useState(0);\n\n  // * SHUFFLE CARDS\n  const shuffleCards = () => {\n    const shuffledCards = [...data, ...data]\n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({ ...card, id: Math.random() }));\n\n    setCards(shuffledCards);\n  };\n\n  // * CHOOSE CARDS\n  const choseCards = (card) => {\n    console.log(card);\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  // * MATCH CARDS\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      if (choiceOne.src === choiceTwo.src) {\n        setCards((previousCards) => {\n          return previousCards.map((card) => {\n            if (card.src === choiceOne.src) {\n              return { ...card, matched: true };\n            } else {\n              return card;\n            }\n          });\n        });\n        reset();\n      } else {\n        setTimeout(() => reset(), 1500);\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n\n  //* RESET CHOICES\n  const reset = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n  };\n\n  console.log(cards);\n  //*GIORGIO\n\n  const updateCount = () => {\n    console.log(\"updateCount\");\n    setCount(count + 1);\n  };\n\n  return (\n    <div>\n      <div className=\"container_load\">\n        <div className=\"container_Player\">\n          <div className=\"form_container\">\n            <div className=\"heading_container\">\n              <h2>Player: {userData.playerName} </h2>\n            </div>\n            <div className=\"container_topButtons\">\n              <div>Turn: {count}</div>\n              <div className=\"button_container\">\n                <button onClick={shuffleCards}>Load Cards</button>\n              </div>\n            </div>\n          </div>\n          <div>\n            {/* <HighScore highScore={highScore} /> */}\n            <div className=\"cards-container\">\n              {/* // * Generate Cards */}\n              {cards.map((card) => (\n                <SingleCard\n                  key={card.id}\n                  src={card.src}\n                  card={card}\n                  choseCards={choseCards}\n                  updateCount={updateCount}\n                  flipped={\n                    card === choiceOne || card === choiceTwo || card.matched\n                  }\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Cards;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}